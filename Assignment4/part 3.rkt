#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 23 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1           0 5042 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 178
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname |part 3|)"
 #" (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constr"
 #"uctor repeating-decimal #t #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #" ("
0 0 14 3 6 #"widget"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; a bst is a (make-bst widget bst bst)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; widget is the data to be stored"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; left and right are the left and right subtrees"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"widget"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 8 #"quantity"
0 0 24 3 1 #" "
0 0 14 3 5 #"price"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; a widget is a (make-widget Natural Natural Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; same as assignment #3, except no parts component"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"W5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";sorted by name <- = a, -> = z"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B4"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B5"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W5"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";sorted by quantity <- = less, -> = more"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B8"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B7"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 2 #"B8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B6"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 2 #"B7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"B9"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"B10"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"B11"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Templates"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 13 #"fn-for-widget"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"fn-for-widget"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"widget-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"widget-quantity"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; BST -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; computes the height of b"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; uses accumulator approach"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"height-helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 1 #"d"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"height-helper"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"height-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"height-helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; BST -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; computes the difference in heights between the left and right bra"
 #"nches of b"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; negative values indicate a right-heavy tree"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; positive values indicate a left-heavy tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"height-diff"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"height"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"height"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; returns a random natural  between 1 and max, inclusive"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Natural -> Natural"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rnd"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Natural Natural -> (listof widget)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; creates a list num random widgets whose values vary between 1 and"
 #" max"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"random-widgets"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"build-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"dummy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 3 #"rnd"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 3 #"rnd"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 3 #"rnd"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Purpose: Do a Left,Right or a Left,Left rotation on a bst"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(define (rotateLeft bst) bst)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rotateLeft"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 17 3 10 #"; LL Case "
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rotateLeft"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 17 3 9 #"; LR Case"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"rotateLeft"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 17 3 12 #";LL Rotation"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 17 3 12 #";LR Rotation"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;Purpose: Do a Right,Right or a Right,Left rotation on a bst"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";(define (rotateRight bst) bst)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotateRight"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 17 3 9 #"; RR Case"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotateRight"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 17 3 9 #"; RL Case"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rotateRight"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"false?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) )"
0 0 17 3 12 #";RR Rotation"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #")))))"
0 0 17 3 12 #";RL Rotation"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";;Purpose: Determine if the bst breaks any of the rules for an AVL t"
 #"ree and fix it if it does"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";(define balance bst) bst)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 17 3 9 #"; RR Case"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 17 3 9 #"; RL Case"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 17 3 10 #"; LL Case "
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 17 3 9 #"; LR Case"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"balance"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 11 #"height-diff"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 3 #"bst"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"height-diff"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"rotateLeft"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 11 #"height-diff"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"rotateRight"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;(bst widget -> boolean) widget -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;Purpose: Insert a widget into an AVL tree"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define (insertAVL identity w bst) bst)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 10 #";Base Case"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 20 #";No Balancing Needed"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";RR Case"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";LL Case"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";RL Case"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";LR Case"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"insert-allAVL"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 5 #"field"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"insertAVL"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"field"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 5 #"field"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #")))) "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 7 #"insert2"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";insert"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;(widget bst -> boolean) Widget Bst -> Bst"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; Purpose: Adds the widget to an existing binary search tree in the"
 #" correct position."
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";;Widgets are ordered according to the function fn.  "
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(define (insert fn w bst) false)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 12 #"widget-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"widget-price"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 2 #"B5"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W5"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;insert-all"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;(x x -> boolean) (widget -> x) (listof Widget) Bst -> Bst"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;Purpose: Inserts all of the widgets into the binary search tree."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;Values will be ordered by the function fn."
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;The function fn will be applied to part of the widget structure re"
 #"ferred to as field."
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";(define (insert-all fn field low bst) false)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 15 #"widget-quantity"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 15 #"widget-quantity"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 2 #") "
0 0 14 3 2 #"B1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 15 #"widget-quantity"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 2 #"B1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 15 #"widget-quantity"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 2 #") "
0 0 14 3 2 #"B4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 29 1 #"\n"
0 0 24 3 75
(
 #"                                                                    "
 #"      ("
) 0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 29 1 #"\n"
0 0 24 3 85
(
 #"                                                                    "
 #"                ("
) 0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 85
(
 #"                                                                    "
 #"                ("
) 0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 15 #"widget-quantity"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 2 #") "
0 0 14 3 2 #"B4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"      "
) 0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 29 1 #"\n"
0 0 24 3 91
(
 #"                                                                    "
 #"                      ("
) 0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 5 #")   ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                    "
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 5 #"field"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"field"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 5 #"field"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #")))) "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 7 #"insert2"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";find"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;(bst value -> boolean) (bst value -> boolean) value bst -> widget "
 #"| false"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;Purpose: Searches a binary search tree for value based off of eq a"
 #"nd lt."
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";;eq determins if the values are equal"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;lt determins if the first value is less than the second value"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";(define (find eq lt value bst) false)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string<?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string<?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 2 #") "
0 0 14 3 2 #"W2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string<?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 2 #") "
0 0 14 3 2 #"W1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string<?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #" "
0 0 14 3 2 #"B3"
0 0 24 3 2 #") "
0 0 14 3 2 #"W1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 12 #"widget-price"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 12 #"widget-price"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 2 #"B5"
0 0 24 3 2 #") "
0 0 14 3 2 #"W5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";template taken from bst"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 1 #" "
0 0 14 3 2 #"eq"
0 0 24 3 1 #" "
0 0 14 3 2 #"lt"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"eq"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 3 #") ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"lt"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 3 #") ("
0 0 14 3 4 #"find"
0 0 24 3 1 #" "
0 0 14 3 2 #"eq"
0 0 24 3 1 #" "
0 0 14 3 2 #"lt"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"lt"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"find"
0 0 24 3 1 #" "
0 0 14 3 2 #"eq"
0 0 24 3 1 #" "
0 0 14 3 2 #"lt"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";-------------------------------------------------------------------"
 #"----------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";Extra credit, two versions becuase experimentation"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Version 1"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";(bst w -> boolean) widget bst (bst -> bst) -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 113
(
 #";;Purpose: Inserts a function into an bst or avl tree based on the s"
 #"orting fucntion fn and balancing function avl"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";(insert-helper2 fn w bst avl) bst))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"insert-helper2"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 3 #"avl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 3 #"avl"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"avl"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;(w bst -> boolean) widget bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;Purpose: inserts a widget into a bst"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";(insert2 fn w bst) bst))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 12 #"widget-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"widget-price"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 2 #"B5"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W5"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"insert2"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"insert-helper2"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (bst w -> boolean) widget bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";Purpose: Insert a widget into an AVL tree"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(insertAVL2 fn widget bst) bst)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 10 #";Base Case"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 20 #";No Balancing Needed"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";RR Case"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";LL Case"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";RL Case"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #")) )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";LR Case"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insertAVL2"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"insert-helper2"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 7 #"balance"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Version 2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";insert-helper"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;(widget bst -> boolean) Widget Bst avl? -> Bst"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";; Purpose: Adds the widget to an existing binary search tree or an "
 #"AVL in the correct position."
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";;Widgets are ordered according to the function fn.  "
0 0 24 29 1 #"\n"
0 0 17 3 40 #";(define (insert-helper fn w bst) false)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 4 #"avl?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"avl?"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 4 #"avl?"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"balance"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 4 #"avl?"
0 0 24 3 3 #") ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 4 #"avl?"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 4 #"avl?"
0 0 24 3 3 #") ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;(bst widget -> boolean) widget bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;Purpose: insert a widget into a bst"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";(define (bst-insert fn w bst) bst))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-insert"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 12 #"widget-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"widget-price"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 2 #"B5"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W5"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W6"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;(bst widget -> boolean) widget bst -> bst"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;Pupose: insert a widget into an AVL tree"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;(define (avl-insert fn w bst) bst))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 10 #";Base Case"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 2 #"B0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 20 #";No Balancing Needed"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 2 #"B1"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";RR Case"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 2 #"B2"
0 0 24 3 4 #" ) ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 2 #"W4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";LL Case"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";RL Case"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #")) )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string>?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 17 3 8 #";LR Case"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 14 3 5 #"false"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"avl-insert"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"insert-helper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 158
(
 #";-------------------------------------------------------------------"
 #"--------------------------------------------------------------------"
 #"----------------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";;does 3 test for each data structure"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;first 3 is filter"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;second 3 is normal bst"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;third is avl tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"test"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"10klist"
0 0 24 3 2 #" ("
0 0 14 3 14 #"random-widgets"
0 0 24 3 1 #" "
0 0 21 3 5 #"10000"
0 0 24 3 1 #" "
0 0 21 3 6 #"999999"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"10kNormalBst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 8 #"string>?"
0 0 24 3 1 #" "
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 7 #"10klist"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"10kAvlBst"
0 0 24 3 2 #" ("
0 0 14 3 13 #"insert-allAVL"
0 0 24 3 1 #" "
0 0 14 3 8 #"string>?"
0 0 24 3 1 #" "
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 7 #"10klist"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"heightBst"
0 0 24 3 2 #" ("
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 12 #"10kNormalBst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"heightAvl"
0 0 24 3 2 #" ("
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 9 #"10kAvlBst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"filterTest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"time"
0 0 24 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 7 #"10klist"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 7 #"10klist"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 13 #"\"done filter\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"NormalBstTest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"time"
0 0 24 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string<?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 12 #"10kNormalBst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 7 #"10klist"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 22 #"\"done normal bst find\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"AvlBstTest"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"time"
0 0 24 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string<?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 9 #"10kAvlBst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 7 #"10klist"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 19 3 19 #"\"done avl bst find\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"filterTest"
0 0 24 3 3 #") ("
0 0 14 3 10 #"filterTest"
0 0 24 3 3 #") ("
0 0 14 3 10 #"filterTest"
0 0 24 3 3 #") ("
0 0 14 3 13 #"NormalBstTest"
0 0 24 3 3 #") ("
0 0 14 3 13 #"NormalBstTest"
0 0 24 3 3 #") ("
0 0 14 3 13 #"NormalBstTest"
0 0 24 3 3 #") ("
0 0 14 3 10 #"AvlBstTest"
0 0 24 3 3 #") ("
0 0 14 3 10 #"AvlBstTest"
0 0 24 3 3 #") ("
0 0 14 3 10 #"AvlBstTest"
0 0 24 3 2 #") "
0 0 14 3 9 #"heightBst"
0 0 24 3 1 #" "
0 0 14 3 9 #"heightAvl"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";(test)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         367 21           0 0           0 60 0 14 3 5 #"DATA:"
0 0 24 29 1 #"\n"
0 0 14 3 7 #"Filter-"
0 0 24 29 1 #"\n"
0 0 21 3 5 #"10438"
0 0 24 29 1 #"\n"
0 0 21 3 4 #"8703"
0 0 24 29 1 #"\n"
0 0 21 3 4 #"8703"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"Average:"
0 0 24 3 1 #" "
0 0 21 3 8 #"9281.333"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 14 3 6 #"Normal"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST-"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"63"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"93"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"79"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"Average:"
0 0 24 3 1 #" "
0 0 21 3 6 #"78.333"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 5 #"Tree-"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"46"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"63"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"47"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"Average:"
0 0 24 3 1 #" "
0 0 21 3 2 #"52"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 14 3 6 #"Normal"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 7 #"height:"
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 4 #"Tree"
0 0 24 3 1 #" "
0 0 14 3 7 #"height:"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        3415 21           0 0           0 568 0 14 3 10 #"Questions:"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"1."
0 0 24 3 1 #" "
0 0 14 3 3 #"For"
0 0 24 3 1 #" "
0 0 14 3 4 #"each"
0 0 24 3 1 #" "
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 4 #"tree"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"hight"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"BSt"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 21 3 3 #"33."
0 0 24 3 1 #" "
0 0 14 3 4 #"They"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 9 #"different"
0 0 24 3 1 #" "
0 0 14 3 7 #"because"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 29 1 #"\n"
0 0 14 3 10 #"difference"
0 0 24 3 1 #" "
0 0 14 3 7 #"between"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 14 3 8 #"branches"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 4 #"tree"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 2 #"no"
0 0 24 3 1 #" "
0 0 14 3 7 #"greater"
0 0 24 3 1 #" "
0 0 14 3 4 #"than"
0 0 24 3 1 #" "
0 0 21 3 2 #"1."
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 10 #"difference"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 6 #"affect"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 29 1 #"\n"
0 0 14 3 11 #"performance"
0 0 24 3 1 #" "
0 0 14 3 7 #"because"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 10 #"properties"
0 0 24 3 1 #" "
0 0 14 3 5 #"allow"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"algorithm"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 4 #"work"
0 0 24 3 1 #" "
0 0 14 3 4 #"upon"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 4 #"logn"
0 0 24 3 2 #") "
0 0 14 3 7 #"whereas"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 10 #"unbalanced"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 5 #"might"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 14 3 4 #"less"
0 0 24 3 1 #" "
0 0 14 3 9 #"efficient"
0 0 24 3 1 #" "
0 0 14 3 7 #"because"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 21 3 1 #"'"
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 4 #"less"
0 0 24 3 1 #" "
0 0 14 3 6 #"likely"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 6 #"follow"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 11 #"properties."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"2."
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 6 #"faster"
0 0 24 3 1 #" "
0 0 14 3 4 #"than"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 5 #"trees"
0 0 24 3 1 #" "
0 0 14 3 7 #"because"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 6 #"always"
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 4 #"logn"
0 0 24 3 2 #") "
0 0 14 3 7 #"whereas"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 3 #"may"
0 0 24 3 1 #" "
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 3 #"may"
0 0 24 3 1 #" "
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 4 #"have"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"same"
0 0 24 3 1 #" "
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 5 #"time."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"3."
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 1 #" "
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 5 #"about"
0 0 24 3 1 #" "
0 0 21 3 7 #"118.486"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 6 #"faster"
0 0 24 3 1 #" "
0 0 14 3 4 #"than"
0 0 24 3 1 #" "
0 0 14 3 9 #"filtering"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"list."
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 5 #"trees"
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 1 #" "
0 0 14 3 7 #"average"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 5 #"about"
0 0 24 29 1 #"\n"
0 0 21 3 7 #"178.487"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 6 #"faster"
0 0 24 3 1 #" "
0 0 14 3 4 #"than"
0 0 24 3 1 #" "
0 0 14 3 9 #"filtering"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"list."
0 0 24 3 1 #" "
0 0 14 3 7 #"Because"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 4 #"tree"
0 0 24 3 1 #" "
0 0 14 3 6 #"always"
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 4 #"logn"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 29 1 #"\n"
0 0 14 3 7 #"between"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 4 #"logn"
0 0 24 3 2 #") "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"4."
0 0 24 3 1 #" "
0 0 14 3 2 #"If"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 3 1 #" "
0 0 14 3 3 #"had"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 7 #"million"
0 0 24 3 1 #" "
0 0 14 3 8 #"elements"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 8 #"estimate"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 7 #"slower."
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 29 1 #"\n"
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 28 3 1 #","
0 0 21 3 3 #"000"
0 0 24 3 2 #") "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 5 #"about"
0 0 24 3 1 #" "
0 0 21 3 3 #"9.3"
0 0 24 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 21 3 3 #"000"
0 0 28 3 1 #","
0 0 21 3 3 #"000"
0 0 24 3 2 #") "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 28 3 1 #","
0 0 21 3 3 #"000"
0 0 24 3 2 #") "
0 0 14 3 2 #"so"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 9 #"functions"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 6 #"slower"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 21 3 7 #"1000000"
0 0 24 3 1 #" "
0 0 14 3 9 #"elements."
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 7 #"between"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 6 #"slower"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 1 #"("
0 0 14 3 1 #"n"
0 0 24 3 2 #")("
0 0 14 3 9 #"assumming"
0 0 24 3 1 #" "
0 0 14 3 3 #"log"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 14 3 7 #"becuase"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 5 #"worst"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"BST"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 4 #"best"
0 0 24 3 1 #" "
0 0 15 3 4 #"case"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 4 #"logn"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 3 #"AVL"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 2 #"be"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"times"
0 0 24 3 1 #" "
0 0 14 3 6 #"slower"
0 0 24 3 1 #" "
0 0 14 3 7 #"because"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 6 #"always"
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 8 #"run-time"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"O"
0 0 24 3 1 #"("
0 0 14 3 4 #"logn"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0           0 0           0
